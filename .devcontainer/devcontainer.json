{
    "name": "default",
    "customizations": {
        "vscode": {
            "settings": {
                "http.proxyStrictSSL": false
            }
        }
    },
    "image": "mcr.microsoft.com/devcontainers/base:ubuntu",
    "features": {
        "./docker-in-docker": {
            "version": "latest"
        },
        "./python": {
            "version": "3.12.1",
        },
        "./nix": {
            "extraNixConfig": "experimental-features = ca-derivations fetch-closure fetch-tree flakes impure-derivations nix-command",
        },
    },
    "overrideFeatureInstallOrder": [
        "./python",
        "./docker-in-docker",
        "./nix",
    ],
    "mounts": [
        "source=/etc/ssl/certs/,target=/etc/ssl/certs/,type=bind",
        "source=/usr/local/share/ca-certificates/,target=/usr/local/share/ca-certificates/,type=bind"
    ],
    // "initializeCommand": ["bash -c update-ca-certificates"],  // This is the first command we execute
    // "onCreateCommand": "bash -c update-ca-certificates",
    // "postCreateCommand": "bash -c update-ca-certificates",
    // "postStartCommand": [
    //     "bash -c update-ca-certificates"
    // ],
    "containerEnv": {
        "NODE_EXTRA_CA_CERTS": "/etc/ssl/certs/ca-certificates.crt",
        "GIT_SSL_NO_VERIFY": "true",
        "SSL_CERT_FILE": "/etc/ssl/certs/ca-certificates.crt",
        "SSL_CERT": "/etc/ssl/certs/ca-certificates.crt",
        "CURL_CA_BUNDLE": "/etc/ssl/certs/ca-certificates.crt",
        "NIX_SSL_CERT_FILE": "/etc/ssl/certs/ca-certificates.crt"
    },
    "remoteEnv": {
        "NODE_EXTRA_CA_CERTS": "/etc/ssl/certs/ca-certificates.crt",
        "GIT_SSL_NO_VERIFY": "true",
        "SSL_CERT_FILE": "/etc/ssl/certs/ca-certificates.crt",
        "SSL_CERT": "/etc/ssl/certs/ca-certificates.crt",
        "CURL_CA_BUNDLE": "/etc/ssl/certs/ca-certificates.crt",
        "NIX_SSL_CERT_FILE": "/etc/ssl/certs/ca-certificates.crt"
    }
}